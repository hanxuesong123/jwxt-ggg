server:
  port: 56712

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.18.240:3306/kytms?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: root
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
  application:
    name: jwxt-learner #指定服务名
  redis:
    database: 0
    host: 192.168.18.210
    port: 6379
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    timeout: 50000
    password: dmcn


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/jwxt/*/mapper/*.xml


ftp:
  host: 192.168.18.210
  port: 22
  username: root
  password: dmcn@123

logging:
  level:
    com.jwxt: debug


eureka:
  client:
    service-url:
      defaultZone : http://192.168.18.210:56798/eureka/,http://192.168.18.210:56799/eureka/  #我们要把该项目注册到哪个服务中心上
  instance:
    prefer-ip-address: true
    instance-id: learner #在注册中心显示的微服务的名称
    metadata-map:
      cluster: serve
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}/swagger-ui.html


ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000

feign:
  client:
    config:
      default:
        connectTimeout: 50000
        readTimeout: 50000
        loggerLevel: full
  hystrix:
    enabled: true


# 配置断路器
hystrix:
  command:
    default:
      circuitBreaker:
        enabled: true   #启动断路器
        requestVolumeThreshold: 1  #请求数达到后才计算
        sleepWindowInMilliseconds: 10000  #休眠时间
        errorThresholdPercentage: 1    #错误率
      execution:
        isolation:
          thread:   #熔断策略:线程
            timeoutInMilliseconds: 70000  #设置请求超时时间（默认是一秒） 超时后会走后备方法



# 开启了所有健康监测的访问接口，默认只开启了health和info，也开启了hystrix的仪表盘访问
management:
  endpoints:
    web:
      exposure:
        include: '*'


swagger:
  authorization:
    key-name: token
#spring:
#  cloud:
#    config:
#      uri: http://localhost:8888
#      #uri: http://192.168.18.210:8888
#      label: master
#      name: application-learner
#      profile: dev   # 指定环境
